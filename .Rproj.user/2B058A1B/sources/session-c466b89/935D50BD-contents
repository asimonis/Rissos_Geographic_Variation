
# make sure you have Rtools installed
if(!require('devtools')) install.packages('devtools')
# install from GitHub
devtools::install_github('TaikiSan21/PAMpal')
# #PAMpal tutorial available here: https://taikisan21.github.io/PAMpal/

#load packages
library(here)
library(PAMpal)
library(PAMmisc)
library(dplyr)

###USER-DEFINED FIELDS####
baseDir <- 'D:/Analysis/RissosGeographicVariation/'  
DriftID<-'ADRIFT_039'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
###########################

### Process with PAMpal ###
pps <- PAMpalSettings(db, binFolder, sr_hz='auto', filterfrom_khz=10, filterto_khz=80, winLen_sec=.0025)

#Known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))

#Use event times from CSV file
data <- processPgDetections(pps, mode='time',grouping=DriftTimes,
                            format='%m/%d/%y %H:%M',species='Gg',id=DriftID)

#save original acoustic study (before cleaning)
saveRDS(data, paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))

#load acoustic study
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))

#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
             
#Remove likely false positives based on following features:
#peak frequency<19 kHz
ClickData<-getClickData(data)

#Add events to database
for(E in 1:nrow(DriftTimes)){
  EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
  
  addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
             UIDs=EventClicks$UID,
             eventType='Gg Click Event',
             start=DriftTimes$start[E],
             end=DriftTimes$end[E],
             type='click')
}

#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))



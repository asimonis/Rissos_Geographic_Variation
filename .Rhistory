#Remove likely false positives based on following features:
#peak frequency<19 kHz
ClickData<-getClickData(data)
ClickData<-filter(ClickData, peak>19)
#Add events to database
addPgEvent(db,binary = data@files[["binaries"]],UIDs=ClickData$UID,eventType='GgClick')
#load packages
library(here)
library(PAMpal)
library(PAMmisc)
library(dplyr)
###USER-DEFINED FIELDS####
baseDir <- 'D:/Analysis/RissosGeographicVariation/'
DriftID<-'ADRIFT_039'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
#load acoustic study
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Remove likely false positives based on following features:
#peak frequency<19 kHz
ClickData<-getClickData(data)
summary(ClickData$Channel)
hist(ClickData$Channel)
hist(as.numeric(ClickData$Channel))
knitr::opts_chunk$set(echo = TRUE)
# When this rmarkdown file is knit:
# FALSE means it will used saved .rds files instead of re-processing
# TRUE will run everything from scratch - this will take a long time
freshRun <- FALSE
library("easypackages")
libraries("PAMpal","PAMmisc","dplyr", "magick", "magrittr", "here")
here()
###USER-DEFINED FIELDS####
baseDir <- 'D:/Analysis/RissosGeographicVariation/'
DriftID<-'ADRIFT_039'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
pps <- PAMpalSettings(db=db,
binaries = binFolder,
sr_hz='auto',
winLen_sec=.0025,
filterfrom_khz=10,
filterto_khz=80)
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
#Use event times from CSV file
data <- processPgDetections(pps, mode='time',grouping=DriftTimes,
format='%m/%d/%y %H:%M',species='Gg',id=DriftID)
knitr::opts_chunk$set(echo = TRUE)
# When this rmarkdown file is knit:
# FALSE means it will used saved .rds files instead of re-processing
# TRUE will run everything from scratch - this will take a long time
freshRun <- FALSE
library("easypackages")
libraries("PAMpal","PAMmisc","dplyr",  "here")
here()
###USER-DEFINED FIELDS####
baseDir <- 'D:/Analysis/RissosGeographicVariation/'
DriftID<-'ADRIFT_039'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
pps <- PAMpalSettings(db=db,
binaries = binFolder,
sr_hz='auto',
winLen_sec=.0025,
filterfrom_khz=10,
filterto_khz=80)
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
#Use event times from CSV file
data <- processPgDetections(pps, mode='time',grouping=DriftTimes,
format='%m/%d/%y %H:%M',species='Gg',id=DriftID)
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
# Double check warning messages
print(getWarnings(data)$message)
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
ClickData<-getClickData(data)
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
library(PAMpal)
?calculateAverageSpectra
knitr::opts_chunk$set(echo = TRUE)
# When this rmarkdown file is knit:
# FALSE means it will used saved .rds files instead of re-processing
# TRUE will run everything from scratch - this will take a long time
freshRun <- FALSE
library("easypackages")
libraries("PAMpal","PAMmisc","dplyr",  "here")
here()
baseDir <- 'F:/Odontocetes/RissosGeographicVariation/'
DriftID<-'ADRIFT_021'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data, peak>15 & duration<2000)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
calculateAverageSpectra(data,flim=c(0,100000))
data<-updateFiles(data)
calculateAverageSpectra(data,flim=c(0,100000))
? calculateAverageSpectra
DriftID<-'ADRIFT_033'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
calculateAverageSpectra(data,flim=c(0,100000))
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
data<-updateFiles(data)
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
View(data)
calculateAverageSpectra(data,flim=c(0,100000))
baseDir <- 'F:/Odontocetes/RissosGeographicVariation/'
DriftID<-'ADRIFT_033'
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
data<-updateFiles(data)
#save original acoustic study (before cleaning)
saveRDS(data, paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
knitr::opts_chunk$set(echo = TRUE)
# When this rmarkdown file is knit:
# FALSE means it will used saved .rds files instead of re-processing
# TRUE will run everything from scratch - this will take a long time
freshRun <- FALSE
library("easypackages")
libraries("PAMpal","PAMmisc","dplyr",  "here")
here()
###USER-DEFINED FIELDS####
baseDir <- 'F:/Odontocetes/RissosGeographicVariation/'
DriftID<-'ADRIFT_033'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
pps <- PAMpalSettings(db=db,
binaries = binFolder,
sr_hz='auto',
winLen_sec=.0025,
filterfrom_khz=10,
filterto_khz=80)
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
#Use event times from CSV file
data <- processPgDetections(pps, mode='time',grouping=DriftTimes,
format='%m/%d/%y %H:%M',species='Gg',id=DriftID)
knitr::opts_chunk$set(echo = TRUE)
###USER-DEFINED FIELDS####
baseDir <- 'F:/Odontocetes/RissosGeographicVariation/'
DriftID<-'ADRIFT_033'
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
###USER-DEFINED FIELDS####
baseDir <- 'F:/Odontocetes/RissosGeographicVariation/'
DriftID<-'ADRIFT_033'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
data<-filter(data, Channel==1)
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
knitr::opts_chunk$set(echo = TRUE)
DriftID<-'CCES_007'
library("easypackages")
library("lubridate")
libraries("PAMpal","PAMmisc","dplyr",  "here")
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
if(substr(DriftID,1,4)=='CCES'){
DriftTimes$end<-DriftTimes$start + seconds(119) }
knitr::opts_chunk$set(echo = TRUE)
libraries("PAMpal","PAMmisc","dplyr",  "here")
data<-readRDS(here('data','CCES_007_Gg.rds'))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
baseDir<-choose.dir()
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
library(PAMpal)
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
baseDir
baseDir<-'C:\\Users\\annes\\Documents\\Github\\Rissos_Geographic_Variation\\data\\'
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
baseDir<-'C:\\Users\\annes\\Documents\\Github\\Rissos_Geographic_Variation\\data\\'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
db <- paste0(baseDir,'Databases/',DriftID,'.sqlite3')
data<-updateFiles(data,bin=binFolder,db=db)
baseDir<-here('data')
DriftID<-'CCES_007'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
pps <- PAMpalSettings(db=db,
binaries = binFolder,
sr_hz='auto',
winLen_sec=.0025,
filterfrom_khz=10,
filterto_khz=80)
binFolder <- paste0(baseDir,'/Binaries/',DriftID)
pps <- PAMpalSettings(db=db,
binaries = binFolder,
sr_hz='auto',
winLen_sec=.0025,
filterfrom_khz=10,
filterto_khz=80)
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
#Define end time. For CCES, this will be 2 minutes after file start time
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
if(substr(DriftID,1,4)=='CCES'){
DriftTimes$end<-DriftTimes$start + seconds(119) }
#Use event times from CSV file
data <- processPgDetections(pps, mode='time',grouping=DriftTimes,
format='%m/%d/%y %H:%M',species='Gg',id=DriftID)
db <- paste0(baseDir,'/Databases/',DriftID,' - Copy.sqlite3')
pps <- PAMpalSettings(db=db,
binaries = binFolder,
sr_hz='auto',
winLen_sec=.0025,
filterfrom_khz=10,
filterto_khz=80)
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
#Define end time. For CCES, this will be 2 minutes after file start time
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
if(substr(DriftID,1,4)=='CCES'){
DriftTimes$end<-DriftTimes$start + seconds(119) }
#Use event times from CSV file
data <- processPgDetections(pps, mode='time',grouping=DriftTimes,
format='%m/%d/%y %H:%M',species='Gg',id=DriftID)
saveRDS(data, paste0(baseDir,'/AcousticStudies/',DriftID,'_Gg.rds'))
baseDir
baseDir<-"C:/Users/annes/Documents/Github/Rissos_Geographic_Variation/data/"
DriftID<-'CCES_007'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
binFolder
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
#Import known Risso's dolphin Event Times
GgTimes<-read.csv(here('EventTimes','ADRIFT_GgDetections.csv'))
GgTimes$start<-as.POSIXct(GgTimes$UTC,format='%Y-%m-%d %H:%M:%S',tz='UTC')
GgTimes$end<-as.POSIXct(GgTimes$end,format='%Y-%m-%d %H:%M:%S',tz='UTC')
DriftTimes<-filter(GgTimes,DriftName==DriftID)
DriftTimes$id<-paste0(DriftID,'_',seq(1:nrow(DriftTimes)))
if(substr(DriftID,1,4)=='CCES'){
DriftTimes$end<-DriftTimes$start + seconds(119) }
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
#Add events to database
for(E in 1:nrow(DriftTimes)){
EventClicks<-filter(ClickData,eventId==DriftTimes$id[E])
addPgEvent(db,binary = data@events[[E]]@files[["binaries"]],
UIDs=EventClicks$UID,
eventType='Gg Click Event',
start=DriftTimes$start[E],
end=DriftTimes$end[E],
type='click')
}
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000))
?calculateAverageSpectra
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000),showBreaks=TRUE)
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000),evNum=1,showBreaks=TRUE)
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000),evNum=2,showBreaks=TRUE)
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,100000),evNum=2,mode='ceps')
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,evNum=2,mode='ceps')
#Plot mean spectrum & concatenated spectrogram
calculateAverageSpectra(data,flim=c(0,.2),evNum=2,mode='ceps')
knitr::opts_chunk$set(echo = TRUE)
library("easypackages")
library("lubridate")
libraries("PAMpal","PAMmisc","dplyr",  "here",'beepr')
here()
###USER-DEFINED FIELDS####
baseDir <- 'E:/Analysis/'
DriftID<-'ADRIFT_012'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
###USER-DEFINED FIELDS####
baseDir <- 'E:/Analysis/'
DriftID<-'ADRIFT_012'
binFolder <- paste0(baseDir,'Binaries/',DriftID)    #Folder with binaries
# this database should be a COPY of the original because we will add events to it later
db <- paste0(baseDir,'Databases/',DriftID,' - Copy.sqlite3')
knitr::opts_chunk$set(echo = TRUE)
library("easypackages")
library("easypackages")
library("lubridate")
libraries("PAMpal","PAMmisc","dplyr",  "here",'beepr')
DriftID<-'ADRIFT_003'
baseDir<-here('data')
knitr::opts_chunk$set(echo = TRUE)
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
baseDir<-
baseDir
"C:/Users/annes/Documents/Github/Rissos_Geographic_Variation/data/"
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
data<-readRDS(paste0(baseDir,'/AcousticStudies/',DriftID,'_Gg.rds'))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
View(data)
ClickSummary <- ClickData %>%
group_by(eventID)%>%
summarise(ClickNum = n())
ClickSummary <- ClickData %>%
group_by(eventId)%>%
summarise(ClickNum = n())
View(ClickSummary)
AllEvents<-data.frame()
AllEvents<-rbind(ClickSummary)
ClickSummary2 <- ClickData %>%
group_by(eventId)%>%
summarise(ClickNum = n())
AllEvents<-rbind(ClickSummary, ClickSummary2)
l
AllEvents<-rbind(ClickSummary,  AllEvents)
DriftID<-'CCES_007'
data<-readRDS(paste0(baseDir,'AcousticStudies/',DriftID,'_Gg.rds'))
data<-readRDS(paste0(baseDir,'/AcousticStudies/',DriftID,'_Gg.rds'))
#Keep click detections from one channel (upper hydrophone = HTI-92-WB)
data<-filter(data, Channel==1)
#Omit click detectors 0 and 1
data<-filter(data,detectorName!='Click_Detector_0')
data<-filter(data,detectorName!='Click_Detector_1')
data<-filter(data, peak>15 & duration<2000)
ClickData<-getClickData(data)
ClickSummary <- ClickData %>%
group_by(eventId)%>%
summarise(ClickNum = n())
AllEvents<-rbind(ClickSummary,  AllEvents)
View(AllEvents)
here()
here('data')

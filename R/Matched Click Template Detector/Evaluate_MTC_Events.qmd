---
title: "Beaked whale MTC Event Evaluation"
author: "Anne Simonis"
format: html
editor: visual
---

## Ground Truth Datasets

Evaluate automated event creation using Matched Template Classification module using datasets where an analyst has manually defined beaked whales: ADRIFT_050, CCES_004, CCES_012, CCES_017, CCES_023. Note, CCES_004 and CCES_017 were recorded with SM3M recorders and may not be indicative of performance with SoundTrap recorders.

```{r}

source('C:/Users/anne.simonis/Documents/GitHub/PAMpal/devel/matchTemplateFunctions.R')

###USER-DEFINED FIELDS####
baseDir<-'H:/Odontocetes/Beaked whales/MTC/'
DriftName<-c('ADRIFT_050',
             'PG_2_02_09_CCES_012',
             'PG_2_02_09_CCES_014',
             'PG_2_02_09_CCES_020',
             'PG_2_02_09_CCES_023',
             'PG_2_02_09_PASCAL_002',
             'PG_2_02_09_PASCAL_005',
             'PG_2_02_09_PASCAL_009',
             'PG_2_02_09_PASCAL_012',
             'PG_2_02_09_PASCAL_015')
saveFile <- paste0(baseDir,DriftName,'.rds')

OrigDB<-c('H:/Odontocetes/Beaked whales/MTC/ADRIFT_050.sqlite3',
          'H:/Odontocetes/Beaked whales/CCES_2018_Databases/PamGuard64 2_00_16e Drift-12_Final.sqlite3', 
          'H:/Odontocetes/Beaked whales/CCES_2018_Databases/PamGuard64 2_00_16e Drift-15_Final.sqlite3',
           'H:/Odontocetes/Beaked whales/CCES_2018_Databases/PamGuard64 2_00_16e Drift-20_JST.sqlite3',
          'H:/Odontocetes/Beaked whales/CCES_2018_Databases/PamGuard64 2_00_16e Drift-23_JST.sqlite3',
          'H:/Odontocetes/Beaked whales/PASCAL_2016_Databases/UTC/PG_2_02_09_PASCAL_002.sqlite3',
          'H:/Odontocetes/Beaked whales/PASCAL_2016_Databases/UTC/PG_2_02_09_PASCAL_005.sqlite3',
          'H:/Odontocetes/Beaked whales/PASCAL_2016_Databases/UTC/PG_2_02_09_PASCAL_009.sqlite3',
          'H:/Odontocetes/Beaked whales/PASCAL_2016_Databases/UTC/PG_2_02_09_PASCAL_012.sqlite3',
          'H:/Odontocetes/Beaked whales/PASCAL_2016_Databases/UTC/PG_2_02_09_PASCAL_015.sqlite3')

# Template Information
templateNames <- c("ZC","BW43","BW39V","MS","BB","BWC")
extraCols <- c(paste0(templateNames, '_match'))
# these are in order of "templateNames" above. 
threshVals <- c(.55, .45, .6, .5, .25, .6)
```

Loop through saved files and evaluate event creation given defined threshold values.

```{r}

for(d in ){
 
   binFolder <- paste0(baseDir,DriftName[d])    #Folder with binaries
  db <- paste0(baseDir,DriftName[d],' - Copy.sqlite3')
  saveFile <- paste0(baseDir,DriftName[d],'.rds')
  # allData <- loadTemplateFolder(binFolder, names=templateNames, extraCols=extraCols, file=saveFile)
  
allData<-readRDS(saveFile[d])  #load saved binary info

allData <- addTemplateLabels(allData, db=NULL, templateNames, threshVals)
# minDets is minimum detections to count as an event, maxSep is max time between detections before an event is ended. maxLength is maximum length of an event
allData <- markGoodEvents(allData, minDets=3, maxSep=120, maxLength=120)

# summary of how many of the detections in manually annotated events were tagged by template
manualSummary <- summariseManualEvents(allData, db=OrigDB[d])
templateSummary <- summariseTemplateEvents(allData, db=OrigDB[d])

# Labeling "allData" by the template event results
# Don't want to use all FP template events (these are labeled "none"),
# subset randomly some fixed amount instead
whichNotBW <- which(templateSummary$overlapLabel == 'none')
# good practice to set seed before any randomness for reproducibility
set.seed(16)
# change this to however many NotBW events you want
nSubset <-50 
whichSubset <- sample(whichNotBW, size=nSubset, replace=FALSE)
# we'll only label the selected subset as "NotBW", leave the rest as "none"
templateSummary$overlapLabel[whichSubset] <- 'NotBW'
# attach these template labels to the data
allData <- left_join(allData, templateSummary[c('templateEvent', 'overlapLabel')], by='templateEvent')
# remove all "none" events so we only add the labeled and selected subset to database as events
addTemplateEvents(db, binFolder, filter(allData, overlapLabel != 'none'), labelCol='overlapLabel')



# spd <- summaryPlotData(allData, templateNames, threshVals)   

# #only pay attention to beaked whale events
# manualSummary<-manualSummary %>%
#   filter(!eventLabel %in% c('PM','NBHF','?GG','UD'))
# Total<-nrow(manualSummary)
# MissedSpecies<-manualSummary %>%
#   filter(pctOverlap==0)
# Missed<-nrow(MissedSpecies)
# 
# print(paste0(Missed, ' Missed',' of ',Total,' True Beaked Whale Events'))
# print(paste0('Missed species included: ', unique(MissedSpecies$eventLabel)))
# # print(paste0('Correctly found species:',unique(manualSummary$eventLabel[which(manualSummary$pctOverlap>0)])))
# 
# # summary of how many detections tagged by template were present in manually annotated events
# templateSummary <- summariseTemplateEvents(allData, db=OrigDB[d])
# print(paste0(nrow(templateSummary),' Template Events created'))
}
```
